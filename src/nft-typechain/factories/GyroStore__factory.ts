/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { GyroStore } from "../GyroStore";

export class GyroStore__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _GYD: string,
    _nftAddress: string,
    _purchasePrice: BigNumberish,
    _priceUpdateFrequency: BigNumberish,
    _priceIncrement: BigNumberish,
    _priceIncrementDecay: BigNumberish,
    _maxPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GyroStore> {
    return super.deploy(
      _GYD,
      _nftAddress,
      _purchasePrice,
      _priceUpdateFrequency,
      _priceIncrement,
      _priceIncrementDecay,
      _maxPrice,
      overrides || {}
    ) as Promise<GyroStore>;
  }
  getDeployTransaction(
    _GYD: string,
    _nftAddress: string,
    _purchasePrice: BigNumberish,
    _priceUpdateFrequency: BigNumberish,
    _priceIncrement: BigNumberish,
    _priceIncrementDecay: BigNumberish,
    _maxPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _GYD,
      _nftAddress,
      _purchasePrice,
      _priceUpdateFrequency,
      _priceIncrement,
      _priceIncrementDecay,
      _maxPrice,
      overrides || {}
    );
  }
  attach(address: string): GyroStore {
    return super.attach(address) as GyroStore;
  }
  connect(signer: Signer): GyroStore__factory {
    return super.connect(signer) as GyroStore__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GyroStore {
    return new Contract(address, _abi, signerOrProvider) as GyroStore;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_GYD",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_purchasePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_priceUpdateFrequency",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_priceIncrement",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_priceIncrementDecay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "BuyGyroNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "GYD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyGyroNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nft",
    outputs: [
      {
        internalType: "contract GyroNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchasePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_GYD",
        type: "address",
      },
    ],
    name: "setGYD",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_NFTAddress",
        type: "address",
      },
    ],
    name: "setNFTAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_priceIncrement",
        type: "uint256",
      },
    ],
    name: "setPriceIncrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_purchasePrice",
        type: "uint256",
      },
    ],
    name: "setPurchasePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawGYD",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dc3380380610dc383398101604081905261002f916100d6565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b039889166001600160a01b0319918216179091556002805497909816961695909517909555600392909255600755600555600691909155600455610137565b80516001600160a01b03811681146100d157600080fd5b919050565b600080600080600080600060e0888a0312156100f0578283fd5b6100f9886100ba565b9650610107602089016100ba565b604089015160608a015160808b015160a08c015160c0909c01519a9d939c50919a90999198509650945092505050565b610c7d806101466000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610142578063a70e076f14610153578063bcbab73f14610166578063d72966621461016e578063defd6c5f14610181578063f2fde38b1461018a57600080fd5b80633e1d3982146100b957806347ccca02146100d45780634905269c146100ff57806369d0373814610114578063715018a614610127578063806bd32d1461012f575b600080fd5b6100c161019d565b6040519081526020015b60405180910390f35b6002546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020016100cb565b61011261010d366004610a13565b610482565b005b6101126101223660046109c5565b6104b1565b6101126104fd565b61011261013d3660046109c5565b610571565b6000546001600160a01b03166100e7565b6001546100e7906001600160a01b031681565b6101126105bd565b61011261017c366004610a13565b610706565b6100c160035481565b6101126101983660046109c5565b610735565b6001546003546040516323b872dd60e01b8152336004820152306024820152604481019190915260009182916001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156101f857600080fd5b505af115801561020c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023091906109f3565b9050806102905760405162461bcd60e51b815260206004820152602360248201527f6661696c656420746f207472616e736665722047594420746f204779726f53746044820152626f726560e81b60648201526084015b60405180910390fd5b60025460408051631d5e528f60e21b815290516000926001600160a01b0316916375794a3c916004808301926020929190829003018186803b1580156102d557600080fd5b505afa1580156102e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030d9190610a2b565b9050600061031a8261081f565b60408051808201825260208082527f68747470733a2f2f7374617469632e6779726f2e66696e616e63652f6e66742f818301528251808401845260048152632e6a706760e01b81830152925193945060009361037a938692909101610a6f565b604051602081830303815290604052905082336001600160a01b03167fc0434924600a4660755886b8cbf118abe2a52906767c3bdbab8173675fbb1c16836003546040516103c9929190610ade565b60405180910390a36007546103df846001610b35565b6103e99190610c07565b6103f5576103f5610964565b60025460405163cf37834360e01b81526001600160a01b039091169063cf378343906104279033908590600401610ab2565b602060405180830381600087803b15801561044157600080fd5b505af1158015610455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104799190610a2b565b94505050505090565b6000546001600160a01b031633146104ac5760405162461bcd60e51b815260040161028790610b00565b600555565b6000546001600160a01b031633146104db5760405162461bcd60e51b815260040161028790610b00565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105275760405162461bcd60e51b815260040161028790610b00565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b0316331461059b5760405162461bcd60e51b815260040161028790610b00565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105e75760405162461bcd60e51b815260040161028790610b00565b6001546001600160a01b031663a9059cbb61060a6000546001600160a01b031690565b6001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561064d57600080fd5b505afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190610a2b565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156106cb57600080fd5b505af11580156106df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070391906109f3565b50565b6000546001600160a01b031633146107305760405162461bcd60e51b815260040161028790610b00565b600355565b6000546001600160a01b0316331461075f5760405162461bcd60e51b815260040161028790610b00565b6001600160a01b0381166107c45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610287565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6060816108435750506040805180820190915260018152600360fc1b602082015290565b8160005b811561086d578061085781610bec565b91506108669050600a83610b72565b9150610847565b60008167ffffffffffffffff81111561089657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156108c0576020820181803683370190505b509050815b851561095b576108d6600182610ba5565b905060006108e5600a88610b72565b6108f090600a610b86565b6108fa9088610ba5565b610905906030610b4d565b905060008160f81b90508084848151811061093057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610952600a89610b72565b975050506108c5565b50949350505050565b6004546003541061097157565b600554600360008282546109859190610b35565b9091555050600654600554670de0b6b3a7640000916109a391610b86565b6109ad9190610b72565b60055560045460035411156109c3576004546003555b565b6000602082840312156109d6578081fd5b81356001600160a01b03811681146109ec578182fd5b9392505050565b600060208284031215610a04578081fd5b815180151581146109ec578182fd5b600060208284031215610a24578081fd5b5035919050565b600060208284031215610a3c578081fd5b5051919050565b60008151808452610a5b816020860160208601610bbc565b601f01601f19169290920160200192915050565b60008451610a81818460208901610bbc565b845190830190610a95818360208901610bbc565b8451910190610aa8818360208801610bbc565b0195945050505050565b6001600160a01b0383168152604060208201819052600090610ad690830184610a43565b949350505050565b604081526000610af16040830185610a43565b90508260208301529392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610b4857610b48610c1b565b500190565b600060ff821660ff84168060ff03821115610b6a57610b6a610c1b565b019392505050565b600082610b8157610b81610c31565b500490565b6000816000190483118215151615610ba057610ba0610c1b565b500290565b600082821015610bb757610bb7610c1b565b500390565b60005b83811015610bd7578181015183820152602001610bbf565b83811115610be6576000848401525b50505050565b6000600019821415610c0057610c00610c1b565b5060010190565b600082610c1657610c16610c31565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea264697066735822122057845fff6563a794ca2da9772998f5e4d5104a5a6860f3d0c85b3f27ee82224564736f6c63430008040033";
